name: Docker PR Build Test

on:
  pull_request:
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/docker-*.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'

  build-test:
    needs: changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    strategy:
      matrix:
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
            image: backend
            changed: ${{ needs.changes.outputs.backend }}
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            image: frontend
            changed: ${{ needs.changes.outputs.frontend }}
    
    steps:
      - name: Checkout repository
        if: matrix.changed == 'true'
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        if: matrix.changed == 'true'
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker image
        if: matrix.changed == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: false
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/${{ matrix.image }}.tar
      
      - name: Load and test image
        if: matrix.changed == 'true'
        run: |
          docker load --input /tmp/${{ matrix.image }}.tar
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}-${{ matrix.image }}:pr-${{ github.event.number }} --version || true
      
      - name: Run Trivy vulnerability scanner
        if: matrix.changed == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          input: /tmp/${{ matrix.image }}.tar
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Comment PR
        if: failure() && matrix.changed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå Docker build failed for ${{ matrix.name }}. Please check the logs.'
            })