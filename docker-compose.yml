version: '3.8'

services:
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-malagant/links2go}-backend:${TAG:-latest}
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL:-mongodb://mongo:27017/links2go}
      - JWT_SECRET=${JWT_SECRET:-change-me-in-production}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:8080}
    depends_on:
      - mongo
    networks:
      - links2go
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY:-malagant/links2go}-frontend:${TAG:-latest}
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - links2go
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

  mongo:
    image: mongo:7-jammy
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-change-me}
      - MONGO_INITDB_DATABASE=links2go
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - links2go
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  links2go:
    driver: bridge

volumes:
  mongo-data:
  mongo-config: